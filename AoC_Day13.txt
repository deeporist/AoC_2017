今天是像一个小游戏一样的东西

层层的防火墙和扫描器构成一个松散的二维数组, 扫描器在各自的"层"(不等长子数组)内来回巡视

这里有一个包要穿越这层层的防火墙

扫描器和包都是一个时钟周期完成一次移动 sb包只会在所有层的第一块上行动(子数组的0号)
只要包将要前往的地方有扫描器, 它就被抓住

The [severity] of getting caught on a layer is equal to its [depth] multiplied by its [range].

所有扫描器都是从0号位出发 所以刚进去肯定被抓一次

3: 1232[1]232[1]232.....
4: 123432[1]23432[1]23432....
假设range是n, 在第x个周期时, 扫描器累计步数是(2n-1)的整数倍时, 扫描器就在0号
所以当包在第L层时, 假设累计步数是S, (L+1)层的range是N, S是(2N-2)的整数倍时, 下次移动包就要被抓了

0: 3
1: 2
4: 4
6: 4  (N=4)

 p:I012345 (S=6)
s6:0123432 ()


part 2:
在进入之前等一段时间 这段时间扫描器照常移动
求一个周期数T 使得对所有扫描器而言 (T+n)%(s[n])!=0
